@model TabloidMVC.Models.ViewModels.EditUserViewModel

@{
    ViewData["Title"] = "Deactivate";
}

<h1>Deactivate</h1>

<h4>Are you sure you want to deactivate @Model.UserProfile.DisplayName?</h4>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserProfile.FullName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserProfile.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserProfile.DisplayName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserProfile.DisplayName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserProfile.UserType.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserProfile.UserType.Name)
        </dd>
    </dl>
    
    <form asp-action="Deactivate">
        @if (Model.UserProfile.IsDeactivated)   
        {
            <input type="submit" value="Reactivate" class="btn btn-success" />
            <input type="button" value="Cancel" class="btn btn-success" onclick="location.href='@Url.Action("Index","UserProfile")';"/>
        }
        else
        {
            <input type="submit" value="Deactivate" class="btn btn-danger" />
            <input type="button" value="Cancel" class="btn btn-success" onclick="location.href='@Url.Action("Index","UserProfile")';"/>
        }        
    </form>
    <a asp-action="Index">Back to List</a>
</div>


